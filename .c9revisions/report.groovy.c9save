{"ts":1399146852267,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"import groovy.sql.Sql \nimport groovy.json.*\nimport com.xlson.groovycsv.CsvParser\n \ndef sql = Sql.newInstance(\"jdbc:sqlite:/home/boris/MC-Projects/AMC/data/capture.sqlite\", \"org.sqlite.JDBC\")\nsql.execute(\"ATTACH DATABASE '/home/boris/MC-Projects/AMC/data/layout.sqlite' AS layout\")\nsql.execute(\"ATTACH DATABASE '/home/boris/MC-Projects/AMC/data/association.sqlite' AS assoc\")\n\n\n//SELECT value FROM association_variables WHERE name='key_in_list'\n\n// csv must have one unique column, + fields name and surname\n\nif(params.csv){\n    def data = new CsvParser().parse(new File('/home/boris/MC-Projects/AMC/notes.csv').newReader())\n    println data[0].columns\n    data.each{\n        println it.values\n    }\n}else{\n/*\noriginal query from AMC\n// in all pages which have a namefield get namefields zone image url\nSELECT a.student AS student,a.page AS page,a.copy AS copy, b.image AS image\nFROM ( SELECT c.student,c.page,c.copy\n    FROM (SELECT * FROM capture_page WHERE timestamp_auto>0 OR timestamp_manual>0 ) AS c,\n    layout.layout_namefield AS l ON c.student=l.student AND c.page=l.page ) AS a\n    LEFT OUTER JOIN ( SELECT student,page,copy,image FROM capture_zone WHERE type=2 ) AS b\n    ON a.student=b.student AND a.page=b.page AND a.copy=b.copy'''\n*/\n\ndef query = '''SELECT p.student, p.page, p.copy, z.image, a.manual, a.auto \nFROM capture_page p JOIN layout.layout_namefield l ON p.student=l.student AND p.page = l.page \nLEFT JOIN capture_zone z ON z.type = 2 AND z.student = p.student AND z.page = p.page AND z.copy = p.copy \nLEFT JOIN assoc.association_association a ON a.student = p.student AND a.copy = p.copy'''\n\nout << new JsonBuilder(sql.rows(query))\n}"]],"start1":0,"start2":0,"length1":0,"length2":1657}]],"length":1657}
{"contributors":[],"silentsave":false,"ts":1399147725002,"patch":[[{"diffs":[[0,"ata/"],[-1,"association.sqlite' AS assoc\")\n\n\n//SELECT value FROM association_variables WHERE name='key_in_list'\n\n// csv must have one unique column, + fields name and surname\n\nif(params.csv){\n    def data = new CsvParser().parse(new File('/home/boris/MC-Projects/AMC/notes.csv').newReader())\n    println data[0].columns\n    data.each{\n        println it.values\n    }\n}else{\n/*\noriginal query from AMC\n// in all pages which have a namefield get namefields zone image url\nSELECT a.student AS student,a.page AS page,a.copy AS copy, b.image AS image\nFROM ( SELECT c.student,c.page,c.copy\n    FROM (SELECT * FROM capture_page WHERE timestamp_auto>0 OR timestamp_manual>0 ) AS c,\n    layout.layout_namefield AS l ON c.student=l.student AND c.page=l.page ) AS a\n    LEFT OUTER JOIN"],[1,"scoring.sqlite' AS scoring\")\nsql.execute(\"ATTACH DATABASE '/home/boris/MC-Projects/AMC/data/association.sqlite' AS assoc\")\n\n\n/*\noriginal query from AMC\n     $dt=$self->{'_scoring'}->variable('darkness_threshold');\n         'tickedSums'=>{'sql'=>\n\t\t    \"SELECT * FROM (SELECT zone.id_a AS question,zone.id_b AS answer,SUM(CASE\"\n\t\t    .\" WHEN why=\\\"V\\\" THEN 0\"\n\t\t    .\" WHEN why=\\\"E\\\" THEN 0\"\n\t\t    .\" WHEN zone.manual >= 0 THEN zone.manual\"\n\t\t    .\" WHEN zone.total<=0 THEN -1\"\n\t\t    .\" WHEN zone.black >= ? * zone.total THEN 1\"\n\t\t    .\" ELSE 0\"\n\t\t    .\" END) AS nb\"\n\t\t    .\" FROM $t_zone AS zone, scoring.scoring_score AS score\"\n\t\t    .\" ON zone.student=score.student AND zone.copy=score.copy AND zone.id_a=score.question\"\n\t\t    .\" WHERE zone.type=? GROUP BY zone.id_a,zone.id_b)\"\n\t\t    .\" UNION\"\n\t\t    .\" SELECT * FROM (SELECT question,\\\"invalid\\\" AS answer,\"\n\t\t    .\" COUNT(*)-COUNT(NULLIF(why,\\\"E\\\")) AS nb\"\n\t\t    .\" FROM scoring.scoring_score\"\n\t\t    .\" GROUP BY question)\"\n\t\t    .\" UNION\"\n\t\t    .\" SELECT * FROM"],[0," ("],[-1," "],[0,"SELECT "],[-1,"student,page,copy,image FROM capture_zone WHERE type=2 ) AS b\n    ON a.student=b.student AND a.page=b.page AND a.copy=b.copy'''\n"],[1,"question,\\\"empty\\\" AS answer,\"\n\t\t    .\" COUNT(*)-COUNT(NULLIF(why,\\\"V\\\")) AS nb\"\n\t\t    .\" FROM scoring.scoring_score\"\n\t\t    .\" GROUP BY question)\"\n\t\t    .\" UNION\"\n\t\t    .\" SELECT * FROM (SELECT question,\\\"all\\\" AS answer,COUNT(*) AS nb\"\n\t\t    .\" FROM scoring.scoring_score\"\n\t\t    .\" GROUP BY question)\"\n*/\n\n/* SELECT value FROM scoring.scoring_variables WHERE name='darkness_threshold' "],[0,"*/\n\n"],[1,"\n"],[0,"def "]],"start1":340,"start2":340,"length1":912,"length2":1423},{"diffs":[[0,"ECT "],[-1,"p.student, p.page, p.copy,"],[1,"s.question, z.id_b AS answer, \nSUM(CASE\nWHEN s.why='V' THEN 0\nWHEN s.why='E' THEN 0\nWHEN"],[0," z."],[-1,"i"],[0,"ma"],[-1,"ge, a.manual, a.auto \nFROM capture_page p JOIN layout.layout_namefield l ON p.student=l.student AND p.page = l.page \nLEFT JOIN capture_zone z ON z.type = 2 AND"],[1,"nual >= 0 THEN z.manual\nWHEN z.total<=0 THEN 0\nWHEN zone.black >= ?1 * zone.total THEN 1\nELSE 0\nEND) AS nb\nFROM capture_zone z JOIN scoring.scoring_score s\nON"],[0," z.s"]],"start1":1777,"start2":1777,"length1":199,"length2":259},{"diffs":[[0,"\nON z.student = "],[-1,"p"],[1,"s"],[0,".student AND z.p"]],"start1":2029,"start2":2029,"length1":33,"length2":33},{"diffs":[[0," AND"],[-1," z.page = p.page AND "],[1,"\n"],[0,"z.co"]],"start1":2054,"start2":2054,"length1":29,"length2":9},{"diffs":[[0,"y = "],[-1,"p"],[1,"s"],[0,".copy "],[-1,"\nLEFT JOIN assoc.association_association a ON a.student = p.student AND a.copy = p.copy"],[1,"AND\ns.question = z.id_a \nAND z.type = 4\nGROUP BY z.id_a, z.id_b"],[0,"'''\n\n"],[1,"\n"],[0,"out "]],"start1":2064,"start2":2064,"length1":107,"length2":84},{"diffs":[[0,"uery"],[1,", [0.5]"],[0,"))\n"],[-1,"}"]],"start1":2177,"start2":2177,"length1":8,"length2":14}]],"length":2191,"saved":false}
{"ts":1399147743186,"patch":[[{"diffs":[[0,"HEN 0\nWHEN z"],[-1,"one"],[0,".black >= ?1"]],"start1":1915,"start2":1915,"length1":27,"length2":24},{"diffs":[[0,"ck >= ?1 * z"],[-1,"one"],[0,".total THEN "]],"start1":1931,"start2":1931,"length1":27,"length2":24}]],"length":2185,"saved":false}
{"ts":1399147972912,"patch":[[{"diffs":[[0,"d_b'''\n\n"],[1,"query = '''\nSELECT question, 'invalid' AS answer, COUNT(*)-COUNT(NULLIF(why,'E')) AS nb\nFROM scoring.scoring_score\nGROUP BY question\n'''\n\n"],[0,"\nout << "]],"start1":2129,"start2":2129,"length1":16,"length2":154}]],"length":2323,"saved":false}
{"ts":1399147985501,"patch":[[{"diffs":[[0,"uery"],[-1,", [0.5]"],[0,"))\n"]],"start1":2309,"start2":2309,"length1":14,"length2":7}]],"length":2316,"saved":false}
{"ts":1399148090223,"patch":[[{"diffs":[[0,"id_b"],[-1,"'''\n\nquery = '''"],[1,"\nUNION"],[0,"\nSEL"]],"start1":2128,"start2":2128,"length1":24,"length2":14},{"diffs":[[0,"uestion\n"],[1,"UNION\nSELECT question, 'empty' AS answer, COUNT(*)-COUNT(NULLIF(why,'V')) AS nb\nFROM scoring.scoring_score\nGROUP BY question\nUNION\nSELECT question, 'all' AS answer, COUNT(*) AS nb\nFROM scoring.scoring_score\nGROUP BY question\n"],[0,"'''\n\n\nou"]],"start1":2252,"start2":2252,"length1":16,"length2":241},{"diffs":[[0,"ws(query"],[1,", [0.5]"],[0,"))\n"]],"start1":2520,"start2":2520,"length1":11,"length2":18}]],"length":2538,"saved":false}
{"ts":1399148195276,"patch":[[{"diffs":[[0,"*/\n\n"],[-1,"/* SELECT value FROM scoring.scoring_variables WHERE name='darkness_threshold' */\n\n"],[0,"\ndef"]],"start1":1671,"start2":1671,"length1":91,"length2":8},{"diffs":[[0,"on\n'''\n\n"],[-1,"\n"],[0,"out << n"]],"start1":2399,"start2":2399,"length1":17,"length2":16},{"diffs":[[0,"y, ["],[-1,"0.5"],[1,"sql.firstRow(\"SELECT value FROM scoring.scoring_variables WHERE name='darkness_threshold'\").value"],[0,"]))\n"]],"start1":2443,"start2":2443,"length1":11,"length2":105}]],"length":2548,"saved":false}
{"ts":1399149376007,"patch":[[{"diffs":[[0,".JDBC\")\n"],[1,"//"],[0,"sql.exec"]],"start1":183,"start2":183,"length1":16,"length2":18},{"diffs":[[0,"oring\")\n"],[1,"//"],[0,"sql.exec"]],"start1":367,"start2":367,"length1":16,"length2":18},{"diffs":[[0,"''\n\n"],[-1,"out << new JsonBuilder(sql.rows(query, [sql.firstRow(\"SELECT value FROM scoring.scoring_variables WHERE name='darkness_threshold'\").value])"],[1,"def query2 = '''\nSELECT question, name, indicative\nFROM score_title JOIN scoring_question USING question\nWHERE strategy <> 'auto=0'\nGROUP BY question, name, indicative\nORDER BY question\n'''\n\ndef questions = [:]\n\nsql.eachRow(query2){ row ->\n    row.answers = []\n    questions[row.question] = row\n}\n\nsql.eachRow(query, [sql.firstRow(\"SELECT value FROM scoring.scoring_variables WHERE name='darkness_threshold'\").value]){ row ->\n    if(questions[row.question]){\n        questions[row.question].answers = row\n    }\n}\n\nout << new JsonBuilder(questions"],[0,")\n"]],"start1":2407,"start2":2407,"length1":145,"length2":552}]],"length":2959,"saved":false}
{"ts":1399149400857,"patch":[[{"diffs":[[0,"OM score"],[1,"ing"],[0,"_title J"]],"start1":2464,"start2":2464,"length1":16,"length2":19}]],"length":2962,"saved":false}
{"ts":1399149413906,"patch":[[{"diffs":[[0,"ROM scor"],[-1,"e"],[0,"ing_titl"]],"start1":2463,"start2":2463,"length1":17,"length2":16}]],"length":2961,"saved":false}
{"ts":1399149445865,"patch":[[{"diffs":[[0,"cative\nFROM "],[1,"scoring."],[0,"scoring_titl"]],"start1":2455,"start2":2455,"length1":24,"length2":32},{"diffs":[[0,"_title JOIN "],[1,"scoring."],[0,"scoring_ques"]],"start1":2482,"start2":2482,"length1":24,"length2":32}]],"length":2977,"saved":false}
{"ts":1399149493818,"patch":[[{"diffs":[[0,"y2 = '''\nSELECT "],[1,"t."],[0,"question, name, "]],"start1":2419,"start2":2419,"length1":32,"length2":34},{"diffs":[[0,"ECT t.question, "],[1,"t."],[0,"name, "],[1,"q."],[0,"indicative\nFROM "]],"start1":2431,"start2":2431,"length1":38,"length2":42},{"diffs":[[0,"g_title "],[1,"t "],[0,"JOIN sco"]],"start1":2487,"start2":2487,"length1":16,"length2":18},{"diffs":[[0,"ion "],[-1,"USING "],[1,"q ON  t.question = q."],[0,"ques"]],"start1":2523,"start2":2523,"length1":14,"length2":29},{"diffs":[[0,"n\nWHERE "],[1,"q."],[0,"strategy"]],"start1":2555,"start2":2555,"length1":16,"length2":18},{"diffs":[[0,"uto=0'\nGROUP BY "],[1,"t."],[0,"question, name, "]],"start1":2579,"start2":2579,"length1":32,"length2":34},{"diffs":[[0,"estion, "],[1,"t."],[0,"name, "],[1,"q."],[0,"indicati"]],"start1":2599,"start2":2599,"length1":22,"length2":26},{"diffs":[[0,"ve\nORDER BY "],[1,"t."],[0,"question\n'''"]],"start1":2625,"start2":2625,"length1":24,"length2":26}]],"length":3010,"saved":false}
{"ts":1399149513812,"patch":[[{"diffs":[[0,"T t.question, t."],[-1,"nam"],[1,"titl"],[0,"e, q.indicative\n"]],"start1":2433,"start2":2433,"length1":35,"length2":36},{"diffs":[[0,"tion, t."],[-1,"nam"],[1,"titl"],[0,"e, q.ind"]],"start1":2602,"start2":2602,"length1":19,"length2":20}]],"length":3012,"saved":false}
{"ts":1399149562558,"patch":[[{"diffs":[[0,"egy "],[-1,"<"],[0,">"],[1," 'auto=0' OR q.strategy <"],[0," 'au"]],"start1":2571,"start2":2571,"length1":10,"length2":34}]],"length":3036,"saved":false}
{"ts":1399149579909,"patch":[[{"diffs":[[0,"ion\n"],[-1,"WHERE q.strategy > 'auto=0' OR q.strategy < 'auto=0'"],[0,"\nGRO"]],"start1":2554,"start2":2554,"length1":60,"length2":8}]],"length":2984,"saved":false}
{"ts":1399149592066,"patch":[[{"diffs":[[0,"on\n\n"],[-1,"GROUP BY t.question, t.title, q.indicative\nORDER BY t.question\n"],[0,"'''\n"]],"start1":2555,"start2":2555,"length1":71,"length2":8}]],"length":2921,"saved":false}
{"ts":1399149599655,"patch":[[{"diffs":[[0,"uestion\n"],[1,"WHERE q.strategy <> 'auto=0'\nGROUP BY t.question, t.title, q.indicative\nORDER BY t.question"],[0,"\n'''\n\nde"]],"start1":2550,"start2":2550,"length1":16,"length2":107}]],"length":3012,"saved":false}
{"ts":1399149646102,"patch":[[{"diffs":[[0," ->\n    "],[1,"//"],[0,"row.answ"]],"start1":2700,"start2":2700,"length1":16,"length2":18},{"diffs":[[0,"= row\n}\n"],[1,"/*"],[0,"\nsql.eac"]],"start1":2755,"start2":2755,"length1":16,"length2":18},{"diffs":[[0,"    }\n}\n"],[1,"*/"],[0,"\nout << "]],"start1":2973,"start2":2973,"length1":16,"length2":18}]],"length":3018,"saved":false}
{"ts":1399149718612,"patch":[[{"diffs":[[0,"y2 = '''"],[-1,"\n"],[0,"SELECT t"]],"start1":2419,"start2":2419,"length1":17,"length2":16}]],"length":3017,"saved":false}
{"ts":1399149774482,"patch":[[{"diffs":[[0," = [:]\n\n"],[1,"out << new JsonBuilder(questions)\n/*\n"],[0,"sql.each"]],"start1":2667,"start2":2667,"length1":16,"length2":53},{"diffs":[[0,"= row\n}\n"],[1,"*/\n"],[0,"/*\nsql.e"]],"start1":2791,"start2":2791,"length1":16,"length2":19},{"diffs":[[0," }\n}\n*/\n"],[1,"//"],[0,"out << n"]],"start1":3015,"start2":3015,"length1":16,"length2":18}]],"length":3059,"saved":false}
{"ts":1399149787049,"patch":[[{"diffs":[[0,"Builder("],[-1,"questions"],[1,"sql.rows(query2)"],[0,")\n/*\nsql"]],"start1":2690,"start2":2690,"length1":25,"length2":32}]],"length":3066,"saved":false}
{"ts":1399149825836,"patch":[[{"diffs":[[0,":]\n\n"],[-1,"out << new JsonBuilder(sql.rows(query2))\n/*"],[0,"\nsql"]],"start1":2671,"start2":2671,"length1":51,"length2":8},{"diffs":[[0,"= row\n}\n"],[-1,"*/"],[0,"\n/*\nsql."]],"start1":2755,"start2":2755,"length1":18,"length2":16},{"diffs":[[0," }\n}\n*/\n"],[-1,"//"],[0,"out << n"]],"start1":2977,"start2":2977,"length1":18,"length2":16}]],"length":3019,"saved":false}
{"ts":1399149879503,"patch":[[{"diffs":[[0,"    "],[-1,"//row"],[1,"def a = new Expando(row)\n    a"],[0,".ans"]],"start1":2704,"start2":2704,"length1":13,"length2":38},{"diffs":[[0,"tion] = "],[-1,"row"],[1,"a"],[0,"\n}\n\n/*\ns"]],"start1":2774,"start2":2774,"length1":19,"length2":17}]],"length":3042,"saved":false}
{"ts":1399150039231,"patch":[[{"diffs":[[0,"dicative"],[1,", q.type"],[0,"\n"],[-1,""],[0,"FROM sco"]],"start1":2459,"start2":2459,"length1":17,"length2":25},{"diffs":[[0,"dicative"],[1,", q.type"],[0,"\nORDER B"]],"start1":2628,"start2":2628,"length1":16,"length2":24},{"diffs":[[0,"ndo("],[-1,"row)"],[1,")\n    a.question = row.question\n    a.title = row.title\n    a.indicative = row.indicative\n    a.type = row.type"],[0,"\n   "]],"start1":2740,"start2":2740,"length1":12,"length2":119}]],"length":3165,"saved":false}
{"ts":1399150077172,"patch":[[{"diffs":[[0," = a\n}\n\n"],[-1,"/*\n"],[0,"sql.each"]],"start1":2902,"start2":2902,"length1":19,"length2":16},{"diffs":[[0,"answers "],[-1,"="],[1,"<<"],[0," row\n   "]],"start1":3103,"start2":3103,"length1":17,"length2":18},{"diffs":[[0,"    }\n}\n"],[-1,"*/"],[0,"\nout << "]],"start1":3118,"start2":3118,"length1":18,"length2":16}]],"length":3161,"saved":false}
{"ts":1399150196649,"patch":[[{"diffs":[[0,"tion]){\n"],[1,"        def a = new Expando()\n        a.answer = row.answer\n        a.nb = row.nb\n"],[0,"        "]],"start1":3063,"start2":3063,"length1":16,"length2":98},{"diffs":[[0,"wers << "],[-1,"row"],[1,"a"],[0,"\n    }\n}"]],"start1":3188,"start2":3188,"length1":19,"length2":17}]],"length":3241,"saved":false}
{"ts":1399150222135,"patch":[[{"diffs":[[0,"e]){ row ->\n"],[1,"    println row\n    /*\n"],[0,"    if(quest"]],"start1":3026,"start2":3026,"length1":24,"length2":47},{"diffs":[[0,"a\n    }\n"],[1,"    /*\n"],[0,"}\n\nout <"]],"start1":3219,"start2":3219,"length1":16,"length2":23}]],"length":3271,"saved":false}
{"ts":1399150234591,"patch":[[{"diffs":[[0,"  }\n    "],[-1,"/"],[0,"*"],[1,"/"],[0,"\n}\n\nout "]],"start1":3223,"start2":3223,"length1":18,"length2":18}]],"length":3271,"saved":false}
{"ts":1399150260431,"patch":[[{"diffs":[[0,"question"],[1," AS question"],[0,", z.id_b"]],"start1":1704,"start2":1704,"length1":16,"length2":28}]],"length":3283,"saved":false}
{"ts":1399150278427,"patch":[[{"diffs":[[0," ->\n"],[-1,"    println row\n    /*\n"],[0,"    "]],"start1":3046,"start2":3046,"length1":31,"length2":8},{"diffs":[[0,"  }\n"],[-1,"    */\n"],[0,"}\n\no"]],"start1":3212,"start2":3212,"length1":15,"length2":8}]],"length":3253,"saved":false}
{"ts":1399150410665,"patch":[[{"diffs":[[0," query = '''"],[1,"\nSELECT question, 'all' AS answer, COUNT(*) AS nb\nFROM scoring.scoring_score\nGROUP BY question\nUNION\nSELECT question, 'invalid' AS answer, COUNT(*)-COUNT(NULLIF(why,'E')) AS nb\nFROM scoring.scoring_score\nGROUP BY question\nUNION\nSELECT question, 'empty' AS answer, COUNT(*)-COUNT(NULLIF(why,'V')) AS nb\nFROM scoring.scoring_score\nGROUP BY question\nUNION\n"],[0,"SELECT s.que"]],"start1":1683,"start2":1683,"length1":24,"length2":377},{"diffs":[[0,"d_b\n"],[-1,"UNION\nSELECT question, 'invalid' AS answer, COUNT(*)-COUNT(NULLIF(why,'E')) AS nb\nFROM scoring.scoring_score\nGROUP BY question\nUNION\nSELECT question, 'empty' AS answer, COUNT(*)-COUNT(NULLIF(why,'V')) AS nb\nFROM scoring.scoring_score\nGROUP BY question\nUNION\nSELECT question, 'all' AS answer, COUNT(*) AS nb\nFROM scoring.scoring_score\nGROUP BY question\n"],[0,"'''\n"]],"start1":2415,"start2":2415,"length1":360,"length2":8}]],"length":3254,"saved":false}
{"ts":1399150426970,"patch":[[{"diffs":[[0,"uestions"],[1,".values"],[0,")\n"]],"start1":3244,"start2":3244,"length1":10,"length2":17}]],"length":3261,"saved":false}
{"ts":1399150461044,"patch":[[{"diffs":[[0,"s.values"],[1,"()"],[0,")\n"]],"start1":3251,"start2":3251,"length1":10,"length2":12}]],"length":3263,"saved":false}
{"ts":1399150777833,"patch":[[{"diffs":[[0,"tion]){\n"],[1,"        if(row.answer == 'all'){\n            questions[row.question].total = row.nb\n        }else{\n    "],[0,"        "]],"start1":3076,"start2":3076,"length1":16,"length2":119},{"diffs":[[0,"w Expando()\n"],[1,"    "],[0,"        a.an"]],"start1":3205,"start2":3205,"length1":24,"length2":28},{"diffs":[[0,"        "],[1,"   "],[1," "],[0,"a.nb = r"]],"start1":3251,"start2":3251,"length1":16,"length2":20},{"diffs":[[0,"  a.nb = row.nb\n"],[1,"    "],[0,"        question"]],"start1":3261,"start2":3261,"length1":32,"length2":36},{"diffs":[[0,"rs << a\n"],[1,"        }\n"],[0,"    }\n}\n"]],"start1":3318,"start2":3318,"length1":16,"length2":26}]],"length":3388,"saved":false}
{"ts":1399151063480,"patch":[[{"diffs":[[0,", q.type"],[1," AVG(s.score) / MAX(s.max) AS avg"],[0,"\nFROM sc"]],"start1":2480,"start2":2480,"length1":16,"length2":49},{"diffs":[[0,"uestion\n"],[1,"LEFT JOIN scoring.scoring_score s ON s.question = t.question\n"],[0,"WHERE q."]],"start1":2603,"start2":2603,"length1":16,"length2":77},{"diffs":[[0,"ow.type\n"],[1,"    a.avg = row.avg\n"],[0,"    a.an"]],"start1":2955,"start2":2955,"length1":16,"length2":36}]],"length":3502,"saved":false}
{"ts":1399151082515,"patch":[[{"diffs":[[0,", q.type"],[1,","],[0," AVG(s.s"]],"start1":2480,"start2":2480,"length1":16,"length2":17}]],"length":3503,"saved":false}
{"ts":1399151180782,"patch":[[{"diffs":[[0," q.type,"],[1," s.max,"],[0," AVG(s.s"]],"start1":2481,"start2":2481,"length1":16,"length2":23},{"diffs":[[0,") / "],[-1,"MAX("],[0,"s.max"],[-1,")"],[0," AS "]],"start1":2508,"start2":2508,"length1":18,"length2":13},{"diffs":[[0,", q.type"],[1,", s.max"],[0,"\nORDER B"]],"start1":2746,"start2":2746,"length1":16,"length2":23},{"diffs":[[0,"icative\n"],[-1,""],[0,"    a.ty"]],"start1":2943,"start2":2943,"length1":16,"length2":16},{"diffs":[[0,"ow.type\n"],[1,"    a.max = row.max\n"],[0,"    a.av"]],"start1":2965,"start2":2965,"length1":16,"length2":36}]],"length":3532,"saved":false}
{"ts":1399152545795,"patch":[[{"diffs":[[0,"UNT(*) AS nb"],[-1,""],[0,""],[1,",\n0 as correct"],[0,"\nFROM scorin"]],"start1":1732,"start2":1732,"length1":24,"length2":38},{"diffs":[[0,"(why,'E')) AS nb"],[1,",\n0 as correct"],[0,"\nFROM scoring.sc"]],"start1":1869,"start2":1869,"length1":32,"length2":46},{"diffs":[[0,",'V')) AS nb"],[1,",\n0 as correct"],[0,"\nFROM scorin"]],"start1":2012,"start2":2012,"length1":24,"length2":38},{"diffs":[[0,"D) AS nb"],[-1,""],[0,""],[1,", a.correct"],[0,"\nFROM ca"]],"start1":2294,"start2":2294,"length1":16,"length2":27},{"diffs":[[0,"ype = 4\n"],[1,"JOIN scoring.scoring_score a ON a.student = s.student\nAND a.question = s.question\nAND z.id_b = a.answer\n"],[0,"GROUP BY"]],"start1":2440,"start2":2440,"length1":16,"length2":120},{"diffs":[[0,", z.id_b"],[1,", a.correct"],[0,"\n'''\n\nde"]],"start1":2567,"start2":2567,"length1":16,"length2":27}]],"length":3700,"saved":false}
{"ts":1399152582315,"patch":[[{"diffs":[[0,"b, a.correct"],[1," AS correct"],[0,"\nFROM captur"]],"start1":2301,"start2":2301,"length1":24,"length2":35}]],"length":3711,"saved":false}
{"ts":1399152617094,"patch":[[{"diffs":[[0,"scoring_"],[-1,"score"],[1,"answer"],[0," a ON a."]],"start1":2472,"start2":2472,"length1":21,"length2":22}]],"length":3712,"saved":false}
{"ts":1399152635750,"patch":[[{"diffs":[[0,"  a.nb = row.nb\n"],[1,"            a.correct = row.correct\n"],[0,"            ques"]],"start1":3585,"start2":3585,"length1":32,"length2":68}]],"length":3748,"saved":false}
{"ts":1399153279191,"patch":[[{"diffs":[[0,"hy,'E')) AS nb,\n"],[-1,"0"],[1,"3"],[0," as correct\nFROM"]],"start1":1871,"start2":1871,"length1":33,"length2":33},{"diffs":[[0,"hy,'V')) AS nb,\n"],[-1,"0"],[1,"2"],[0," as correct\nFROM"]],"start1":2010,"start2":2010,"length1":33,"length2":33}]],"length":3748,"saved":false}
